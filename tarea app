Vue.component('componente-alumnos', {
    data() {
        return {
            valor:'',
            alumnos:[],
            accion:'nuevo',
            alumno:{
                idalumno: new Date().getTime(),
                codigo:'',
                nombre:'',
                direccion:'',
                telefono:'',
                email:''
            }
        }
    },
    methods:{
        buscaralumno(e){
            this.listar();
        },
        eliminaralumno(idalumno){
            if( confirm(`Esta seguro de elimina el alumno?`) ){
                let store = abrirStore('alumnos', 'readwrite'),
                query = store.delete(idalumno);
            query.onsuccess = e=>{
                this.nuevoalumno();
                this.listar();
            };
            }
        },
        modificaralumno(alumno){
            this.accion = 'modificar';
            this.alumno = alumno;
        },
        guardaralumno(){
            //almacenamiento del objeto alumnos en indexedDB
            let store = abrirStore('alumnos', 'readwrite'),
                query = store.put({...this.alumno});
            query.onsuccess = e=>{
                this.nuevoalumno();
                this.listar();
            };
            query.onerror = e=>{
                console.error('Error al guardar en alumnos', e.message());
            };
        },
        nuevoalumno(){
            this.accion = 'nuevo';
            this.alumno = {
                idalumno: new Date().getTime(),
                codigo:'',
                nombre:'',
                direccion:'',
                telefono:'',
                email:''
            }
        },
        listar(){
            let store = abrirStore('alumnos', 'readonly'),
                data = store.getAll();
            data.onsuccess = resp=>{
                this.alumnos = data.result
                    .filter(alumno=>alumno.codigo.includes(this.valor) || 
                    alumno.nombre.toLowerCase().includes(this.valor.toLowerCase()) || 
                    alumno.direccion.toLowerCase().includes(this.valor.toLowerCase()) || 
                    alumno.telefono.toLowerCase().includes(this.valor.toLowerCase()) ||
                    alumno.email.toLowerCase().includes(this.valor.toLowerCase()));
            };
        }
    },
    template: `
        <div class="row">
            <div class="col col-md-6">
                <div class="card text-bg-dark">
                    <div class="card-header">REGISTRO DE alumnoS</div>
                    <div class="catd-body">
                        <div class="row p-1">
                            <div class="col col-md-2">CODIGO</div>
                            <div class="col col-md-3">
                                <input v-model="alumno.codigo" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">NOMBRE</div>
                            <div class="col col-md-5">
                                <input v-model="alumno.nombre" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">DIRECCION</div>
                            <div class="col col-md-3">
                                <input v-model="alumno.direccion" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">TELEFONO</div>
                            <div class="col col-md-3">
                                <input v-model="alumno.telefono" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">EMAIL</div>
                            <div class="col col-md-3">
                                <input v-model="alumno.email" type="email" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col">
                                <button @click.prevent.default="guardaralumno" class="btn btn-success">GUARDAR</button>
                                <button @click.prevent.default="nuevoalumno" class="btn btn-warning">NUEVO</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col col-md-6">
                <div class="card text-bg-dark">
                    <div class="card-header">LISTADO DE alumnoS</div>
                    <div class="card-body">
                        <form id="frmalumno">
                            <table class="table table-dark table-hover">
                                <thead>
                                    <tr>
                                        <th>BUSCAR</th>
                                        <th colspan="5">
                                            <input placeholder="codigo, nombre, direccion, telefono, email" type="search" v-model="valor" @keyup="buscaralumno" class="form-control">
                                        </th>
                                    </tr>
                                    <tr>
                                        <th>CODIGO</th>
                                        <th>NOMBRE</th>
                                        <th>DIRECCION</th>
                                        <th>TELEFONO</th>
                                        <th>EMAIL</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr @click="modificaralumno(alumno)" v-for="alumno in alumnos" :key="alumno.idalumno">
                                        <td>{{alumno.codigo}}</td>
                                        <td>{{alumno.nombre}}</td>
                                        <td>{{alumno.direccion}}</td>
                                        <td>{{alumno.telefono}}</td>
                                        <td>{{alumno.email}}</td>
                                        <td><button @click.prevent.default="eliminaralumno(alumno.idalumno)" class="btn btn-danger">del</button></td>
                                    </tr>
                                </tbody>
                            </table>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    `
});
 26 changes: 26 additions & 0 deletions26  
db.js
@@ -0,0 +1,26 @@
var db;
const funcdb = ()=>{
    let indexDB = indexedDB.open('db_sistema',1);
    indexDB.onupgradeneeded = e=>{
        let req = e.target.result,
            tblregistro = req.createObjectStore('registros',{keyPath:'idregistro'}),
            tblmateria = req.createObjectStore('materias',{keyPath:'idmateria'}),
            tblalumno = req.createObjectStore('alumnos',{keyPath:'idalumno'});
        tblregistro.createIndex('idregistro','idregistro',{unique:true});
        tblregistro.createIndex('codigo','codigo',{unique:true});
        tblmateria.createIndex('idmateria','idmateria',{unique:true});
        tblmateria.createIndex('codigo','codigo',{unique:true});
        tblalumno.createIndex('idalumno','idalumno',{unique:true});
        tblalumno.createIndex('codigo','codigo',{unique:true});
    };
    indexDB.onsuccess = e=>{
        db = e.target.result;
    };
    indexDB.onerror = e=>{
        console.error('Error al crear la base de datos', e.message());
    };
}, abrirStore = (store, modo)=>{
    let ltx = db.transaction(store, modo);
    return ltx.objectStore(store);
};
funcdb();
 17 changes: 17 additions & 0 deletions17  
imagenes.js
@@ -0,0 +1,17 @@
const img=(archivo, calidad)=>{
    return new Promise((resolve, reject)=>{
        const $canvas = document.createElement('canvas'),
            imagen = new Image();
        imagen.onload = ()=>{
            $canvas.width = imagen.width;
            $canvas.height = imagen.height;

            $canvas.getContext("2d").drawImage(imagen,0,0,$canvas.width, $canvas.height);
            $canvas.toBlob(blob=>{
                if(blob==null) return reject(blob);
                resolve(blob);
            }, "image/jpej", calidad);
        };
        imagen.src = URL.createObjectURL(archivo);
    });
};
 43 changes: 43 additions & 0 deletions43  
index.html
@@ -0,0 +1,43 @@
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>App de alumnos</title>
    <link rel="stylesheet" href="	https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://unpkg.com/vue-select@3.0.0/dist/vue-select.css">
</head>
<body>
    <div class="container-fluid" id="app">
        <nav class="navbar navbar-expand-lg bg-body-tertiary">
            <div class="container-fluid">
                <a class="navbar-brand">::.. SISTEMA DE ALUMNOS ..::</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
                    <div class="navbar-nav">
                        <a class="nav-link" @click="abrirFormulario('materia')">materia</a>
                        <a class="nav-link" @click="abrirFormulario('registro')">registros</a>
                        <a class="nav-link" @click="abrirFormulario('alumno')">alumnos</a>
                    </div>
                </div>
            </div>
        </nav>
        <div id="appSistema">
            <componente-materias ref="materia" v-show="forms['materia'].mostrar"></componente-materias>
            <componente-registros ref="registro" v-show="forms['registro'].mostrar"></componente-registros>
            <componente-alumnos ref="alumno" v-show="forms['alumno'].mostrar"></componente-alumnos>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/vue@2.7.16/dist/vue.js"></script>
    <script src="https://unpkg.com/vue-select@3.0.0"></script>
    <script src="db.js"></script>
    <script src="imagenes.js"></script>
    <script src="materias.js"></script>
    <script src="registros.js"></script>
    <script src="alumnos.js"></script>
    <script src="main.js"></script>
</body>
</html>
 28 changes: 28 additions & 0 deletions28  
main.js
@@ -0,0 +1,28 @@
var app = new Vue({
    el: '#app',
    data: {
        forms: {
            registro: { mostrar: false },
            materia: { mostrar: false },
            alumno: { mostrar: false },
        }
    },
    methods: {
        abrirFormulario(form) {
            this.forms[form].mostrar = !this.forms[form].mostrar;
            this.$refs[form].listar();
        }
    }
});

async function seleccionarFoto(imagen) {
    let archivo = imagen.files[0];
    if (archivo) {
        let blob = await img(archivo, 1);
        let reader = new FileReader();
        reader.onload = e => {
            app.$refs.registro.registro.foto = e.target.result;
        };
        reader.readAsDataURL(blob);
    }
}
 122 changes: 122 additions & 0 deletions122  
materias.js
@@ -0,0 +1,122 @@
Vue.component('componente-materias', {
    data() {
        return {
            valor:'',
            materias:[],
            accion:'nuevo',
            materia:{
                idmateria: new Date().getTime(),
                codigo:'',
                nombre:'',
            }
        }
    },
    methods:{
        buscarmateria(e){
            this.listar();
        },
        eliminarmateria(idmateria){
            if( confirm(`Esta seguro de elimina el materia?`) ){
                let store = abrirStore('materias', 'readwrite'),
                query = store.delete(idmateria);
            query.onsuccess = e=>{
                this.nuevomateria();
                this.listar();
            };
            }
        },
        modificarmateria(materia){
            this.accion = 'modificar';
            this.materia = materia;
        },
        guardarmateria(){
            //almacenamiento del objeto materias en indexedDB
            let store = abrirStore('materias', 'readwrite'),
                query = store.put({...this.materia});
            query.onsuccess = e=>{
                this.nuevomateria();
                this.listar();
            };
            query.onerror = e=>{
                console.error('Error al guardar en materias', e.message());
            };
        },
        nuevomateria(){
            this.accion = 'nuevo';
            this.materia = {
                idmateria: new Date().getTime(),
                codigo:'',
                nombre:'',
            }
        },
        listar(){
            let store = abrirStore('materias', 'readonly'),
                data = store.getAll();
            data.onsuccess = resp=>{
                this.materias = data.result
                    .filter(materia=>materia.codigo.includes(this.valor) || 
                    materia.nombre.toLowerCase().includes(this.valor.toLowerCase()));
            };
        }
    },
    template: `
        <div class="row">
            <div class="col col-md-6">
                <div class="card text-bg-dark">
                    <div class="card-header">REGISTRO DE materiaS</div>
                    <div class="catd-body">
                        <div class="row p-1">
                            <div class="col col-md-2">CODIGO</div>
                            <div class="col col-md-3">
                                <input v-model="materia.codigo" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">NOMBRE</div>
                            <div class="col col-md-5">
                                <input v-model="materia.nombre" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col">
                                <button @click.prevent.default="guardarmateria" class="btn btn-success">GUARDAR</button>
                                <button @click.prevent.default="nuevomateria" class="btn btn-warning">NUEVO</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col col-md-6">
                <div class="card text-bg-dark">
                    <div class="card-header">LISTADO DE materiaS</div>
                    <div class="card-body">
                        <form id="frmmateria">
                            <table class="table table-dark table-hover">
                                <thead>
                                    <tr>
                                        <th>BUSCAR</th>
                                        <th colspan="5">
                                            <input placeholder="codigo, nombre" type="search" v-model="valor" @keyup="buscarmateria" class="form-control">
                                        </th>
                                    </tr>
                                    <tr>
                                        <th>CODIGO</th>
                                        <th>NOMBRE</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr @click="modificarmateria(materia)" v-for="materia in materias" :key="materia.idmateria">
                                        <td>{{materia.codigo}}</td>
                                        <td>{{materia.nombre}}</td>
                                        <td><button @click.prevent.default="eliminarmateria(materia.idmateria)" class="btn btn-danger">del</button></td>
                                    </tr>
                                </tbody>
                            </table>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    `
});
 201 changes: 201 additions & 0 deletions201  
registros.js
@@ -0,0 +1,201 @@
Vue.component('v-select-materia', VueSelect.VueSelect);
Vue.component('componente-registros', {
    data() {
        return {
            valor:'',
            registros:[],
            materias:[],
            accion:'nuevo',
            registro:{
                materia:{
                    id:'',
                    label:''
                },
                idregistro: new Date().getTime(),
                codigo:'',
                nombre:'',
                marca:'',
                presentacion:'',
                precio:0.0,
                foto:'',
            }
        }
    },
    methods:{
        buscarregistro(e){
            this.listar();
        },
        eliminarregistro(idregistro){
            if( confirm(`Esta seguro de elimina el registro?`) ){
                let store = abrirStore('registros', 'readwrite'),
                query = store.delete(idregistro);
            query.onsuccess = e=>{
                this.nuevoregistro();
                this.listar();
            };
            }
        },
        modificarregistro(registro){
            this.accion = 'modificar';
            this.registro = registro;
        },
        guardarregistro(){
            //almacenamiento del objeto registros en indexedDB
            if( this.registro.materia.id=='' ||
                this.registro.materia.label=='' ){
                console.error("Por favor seleccione una materia");
                return;
            }
            let store = abrirStore('registros', 'readwrite'),
                query = store.put({...this.registro});
            query.onsuccess = e=>{
                this.nuevoregistro();
                this.listar();
            };
            query.onerror = e=>{
                console.error('Error al guardar en registros', e.message());
            };
        },
        nuevoregistro(){
            this.accion = 'nuevo';
            this.registro = {
                materia:{
                    id:'',
                    label:''
                },
                idregistro: new Date().getTime(),
                codigo:'',
                nombre:'',
                marca:'',
                presentacion:'',
                precio:0.0
            }
        },
        listar(){
            let storeCat = abrirStore('materias', 'readonly'),
                dataCat = storeCat.getAll();
            dataCat.onsuccess = resp=>{
                this.materias = dataCat.result.map(materia=>{
                    return {
                        id: materia.idmateria,
                        label:materia.nombre
                    }
                });
            };
            let store = abrirStore('registros', 'readonly'),
                data = store.getAll();
            data.onsuccess = resp=>{
                this.registros = data.result
                    .filter(registro=>registro.codigo.includes(this.valor) || 
                    registro.nombre.toLowerCase().includes(this.valor.toLowerCase()) || 
                    registro.marca.toLowerCase().includes(this.valor.toLowerCase()) || 
                    registro.presentacion.toLowerCase().includes(this.valor.toLowerCase()));
            };
        }
    },
    template: `
        <div class="row">
            <div class="col col-md-6">
                <div class="card">
                    <div class="card-header text-bg-dark">REGISTRO DE REGISTROS</div>
                    <div class="catd-body">
                        <div class="row p-1">
                            <div class="col col-md-2">materia</div>
                            <div class="col col-md-3">
                                <v-select-materia required v-model="registro.materia" 
                                    :options="materias">Por favor seleccione una materia</v-select-materia>
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">CODIGO</div>
                            <div class="col col-md-3">
                                <input v-model="registro.codigo" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">NOMBRE</div>
                            <div class="col col-md-5">
                                <input v-model="registro.nombre" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">SEDE</div>
                            <div class="col col-md-5">
                                <input v-model="registro.marca" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">MODALIDAD</div>
                            <div class="col col-md-3">
                                <input v-model="registro.presentacion" type="text" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">PRECIO</div>
                            <div class="col col-md-3">
                                <input v-model="registro.precio" type="number" class="form-control">
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col col-md-2">
                                <img :src="registro.foto" width="50"/>
                            </div>
                            <div class="col col-md-4">
                                <div class="mb-3">
                                    <label for="formFile" class="form-label">Seleccione la foto</label>
                                    <input class="form-control" type="file" id="formFile" 
                                        accept="image/*" onChange="seleccionarFoto(this)">
                                </div>
                            </div>
                        </div>
                        <div class="row p-1">
                            <div class="col">
                                <button @click.prevent.default="guardarregistro" class="btn btn-success">GUARDAR</button>
                                <button @click.prevent.default="nuevoregistro" class="btn btn-warning">NUEVO</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col col-md-6">
                <div class="card text-bg-dark">
                    <div class="card-header">LISTADO DE REGISTROS</div>
                    <div class="card-body">
                        <form id="frmregistro">
                            <table class="table table-dark table-hover">
                                <thead>
                                    <tr>
                                        <th>BUSCAR</th>
                                        <th colspan="6">
                                            <input placeholder="codigo, nombre, sede, modalidad" type="search" v-model="valor" @keyup="buscarregistro" class="form-control">
                                        </th>
                                    </tr>
                                    <tr>
                                        <th>materia</th>
                                        <th>CODIGO</th>
                                        <th>NOMBRE</th>
                                        <th>SEDE</th>
                                        <th>MODALIDAD</th>
                                        <th>PRECIO</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr @click="modificarregistro(registro)" v-for="registro in registros" :key="registro.idregistro">
                                        <td>{{registro.materia.label}}</td>
                                        <td>{{registro.codigo}}</td>
                                        <td>{{registro.nombre}}</td>
                                        <td>{{registro.marca}}</td>
                                        <td>{{registro.presentacion}}</td>
                                        <td>{{registro.precio}}</td>
                                        <td><button @click.prevent.default="eliminarregistro(registro.idregistro)" class="btn btn-danger">del</button></td>
                                    </tr>
                                </tbody>
                            </table>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    `
});
